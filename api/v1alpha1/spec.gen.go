// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
