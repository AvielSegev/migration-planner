// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
