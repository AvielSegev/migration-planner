// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"V9PVfwMAAP//OKylrsIkAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
