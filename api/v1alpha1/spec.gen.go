// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
