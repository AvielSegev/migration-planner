// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
