// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
