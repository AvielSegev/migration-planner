// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
