---
- name: Gather vCenter information and store it in a file
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Include vSphere creds
      ansible.builtin.include_vars:
        file: vsphere_creds.yml

    - name: Create or clear the output file
      when: "{{ gather_information_store_in_a_file }}"
      copy:
        content: ""
        dest: "{{ gather_information_output_file_name }}"

    - name: Ensure the output file is writable
      when: "{{ gather_information_store_in_a_file }}"
      file:
        path: "{{ gather_information_output_file_name }}"
        state: touch
        mode: '0644'

    - name: Get a list of ESX hosts that vCenter knows about that are in state CONNECTED
      vmware.vmware_rest.vcenter_host_info:
        vcenter_hostname: "{{ gather_information_vsphere_hostname }}"
        vcenter_username: "{{ gather_information_vsphere_username }}"
        vcenter_password: "{{ gather_information_vsphere_password }}"
        vcenter_validate_certs: "{{ gather_information_vsphere_validate_certs }}"
        vcenter_rest_log_file: "{{ gather_information_vsphere_rest_log_file
          if gather_information_debug | default(false) else omit }}"
        connection_states: "{{ gather_information_vsphere_connected_states
          if (gather_information_vsphere_connected_states is defined and gather_information_vsphere_connected_states | length > 0) else omit }}"
      register: r_hosts

    - name: Set fact with list of hosts to operate on that are POWERED_ON
      ansible.builtin.set_fact:
        r_discovered_hosts: "{{ r_hosts.value |
          map(attribute='name') }}"

    - name: Get information from VMware vCenter
      community.vmware.vmware_about_info:
        hostname: '{{ gather_information_vsphere_hostname }}'
        username: '{{ gather_information_vsphere_username }}'
        password: '{{ gather_information_vsphere_password }}'
        validate_certs: "{{ gather_information_vsphere_validate_certs }}"
      register: vcenter_about_info

    - name: Get vm information from VMware
      vmware.vmware_rest.vcenter_vm_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
      register: vcenter_vm_info

    - name: Get vm_detailed information from VMware
      vmware.vmware_rest.vcenter_vm_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
        vm: "{{ item['vm'] }}"
      loop: "{{ vcenter_vm_info['value'] }}"
      ignore_errors: yes
      register: vcenter_vm_detailed_info

    - name: Get vm_tools information from VMware
      vmware.vmware_rest.vcenter_vm_tools_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
        vm: "{{ item['vm'] }}"
      loop: "{{ vcenter_vm_info['value'] }}"
      ignore_errors: yes
      register: vcenter_vm_tools_info

    - name: Get vm network information from VMware
      vmware.vmware_rest.vcenter_vm_guest_networking_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
        vm: "{{ item['vm'] }}"
      loop: "{{ vcenter_vm_info['value'] }}"
      ignore_errors: yes
      register: vcenter_vm_network_info

    - name: Check vm tools is installed on each vm
      ansible.builtin.debug:
        msg: "VMware Tools Not Installed and is required for pre-migration hook {{ item.item.name }}. Loop failed."
      when: item.value['version_status'] == 'NOT_INSTALLED'
      loop: "{{ vcenter_vm_tools_info.results }}"
      ignore_errors: yes
      loop_control:
        label: "{{ item.item.name }}"

    - name: VMs without installed VM tools
      ansible.builtin.set_fact:
        not_installed_tools: "{{ not_installed_tools | default([]) + [item.item.name]}}"
      when: item.value['version_status'] == 'NOT_INSTALLED'
      loop: "{{ vcenter_vm_tools_info.results }}"
      ignore_errors: yes
      loop_control:
        label: "{{ item.item.name }}"

    # datacenter information
    - name: Get datacenter information from VMWare
      vmware.vmware_rest.vcenter_datacenter_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: false
      register: gather_information_vcenter_datacenter_info

    - name: Get folders information
      community.vmware.vmware_folder_info:
        hostname: '{{ gather_information_vsphere_hostname }}'
        username: '{{ gather_information_vsphere_username }}'
        password: '{{ gather_information_vsphere_password }}'
        validate_certs: false
        datacenter: "{{ item['name'] }}"
      loop: "{{ gather_information_vcenter_datacenter_info['value'] }}"
      register: gather_information_vcenter_folder_info

      # cluster info
    - name: Get cluster information
      vmware.vmware_rest.vcenter_cluster_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: false
      register: gather_information_vcenter_cluster_info

    - name: Gather info about ESXi Host for each cluster
      community.vmware.vmware_host_config_info:
        hostname: '{{ gather_information_vsphere_hostname }}'
        username: '{{ gather_information_vsphere_username }}'
        password: '{{ gather_information_vsphere_password }}'
        validate_certs: "{{ gather_information_vsphere_validate_certs }}"
        cluster_name: "{{ item['name'] }}"
      loop: "{{ gather_information_vcenter_cluster_info['value']}}"
      register: vmware_host_config_info

    # network info
    - name: Get network information from VMWare
      vmware.vmware_rest.vcenter_network_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: false
      register: gather_information_vcenter_network_info

    - name: Gather all registered dvswitch
      community.vmware.vmware_dvswitch_info:
        hostname: '{{ gather_information_vsphere_hostname }}'
        username: '{{ gather_information_vsphere_username }}'
        password: '{{ gather_information_vsphere_password }}'
        validate_certs: false
      delegate_to: localhost
      register: dvswitch_info

    # datastore info
    - name: Get datastore information
      vmware.vmware_rest.vcenter_datastore_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: false
      register: gather_information_vcenter_datastore_info

    # resourcepool info
    - name: Get resourcepool information
      vmware.vmware_rest.vcenter_resourcepool_info:
        vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
        vcenter_username: '{{ gather_information_vsphere_username }}'
        vcenter_password: '{{ gather_information_vsphere_password }}'
        vcenter_validate_certs: false
      register: gather_information_vcenter_resourcepool_info

    - name: Concatenate all register outputs and write to the output file
      when: "{{ gather_information_store_in_a_file }}"
      copy:
        content: |
          {
            "esxi_hosts": {{ r_hosts.value | to_json }},
            "powered_on_hosts": {{ r_discovered_hosts | to_json }},
            "information_from_vmware": {{ vcenter_about_info.about_info | to_json }},
            "vm_list": {{ vcenter_vm_info.value | to_json }},
            "vm_details": {{ vcenter_vm_detailed_info.results | map(attribute='value') | list | to_json}},
            "vm_tools": {{ vcenter_vm_tools_info.results | map(attribute='value') | list | to_json }},
            "vm_network_information": {{ vcenter_vm_network_info.results | to_json }},
            "datacenters_information": {{ gather_information_vcenter_datacenter_info | to_json }},
            "folders_information": {{ gather_information_vcenter_folder_info | to_json }},
            "clusters_information": {{ gather_information_vcenter_cluster_info | to_json }},
            "esxis_information": {{ vmware_host_config_info | to_json }},
            "networks_information": {{ gather_information_vcenter_network_info | to_json }},
            "dvswitches_information": {{ dvswitch_info | to_json }},
            "datastore_information": {{ gather_information_vcenter_datastore_info | to_json}},
            "resourcePools_information": {{ gather_information_vcenter_resourcepool_info | to_json}}
          }

        dest: "{{ gather_information_output_file_name }}"


